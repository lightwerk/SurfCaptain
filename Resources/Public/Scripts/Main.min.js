!function(){"use strict";function a(a){var b="/_Resources/Static/Packages/Lightwerk.SurfCaptain/Scripts/SurfCaptainApp/Templates/";a.when("/",{templateUrl:b+"Projects.html",controller:"ProjectsController"}).when("/project/:projectName",{templateUrl:b+"Project.html",controller:"ProjectController"}).when("/project/:projectName/deploy",{templateUrl:b+"Deploy.html",controller:"DeployController"}).when("/project/:projectName/sync",{templateUrl:b+"Sync.html",controller:"SyncController"}).when("/project/:projectName/server",{templateUrl:b+"Server.html",controller:"ServerController"}).when("/about",{templateUrl:b+"About.html",controller:"AboutController"}).when("/globalserver",{templateUrl:b+"GlobalServer.html",controller:"GlobalServerController"}).when("/extensions",{templateUrl:b+"Extensions.html",controller:"ExtensionsController"}).when("/deployments",{templateUrl:b+"Deployments.html",controller:"DeploymentsController"}).when("/project/:projectName/deployment/:deploymentId",{templateUrl:b+"SingleDeployment.html",controller:"SingleDeploymentController"}).when("/settings",{templateUrl:b+"Settings.html",controller:"SettingsController"}).otherwise({redirectTo:"/"})}function b(a){var b={"position-class":"toast-bottom-right","time-out":5e3,"close-button":!0,"body-output-type":"trustedHtml"};angular.extend(a,b)}function c(a){a.theme="bs3"}angular.module("surfCaptain",["ngRoute","xeditable","ngAnimate","ngMessages","ngBiscuit","toaster"]).config(a).config(b).value("version","1.0.11").constant("CONFIG",{applicationTypes:{deploy:"Deploy",deployTYPO3:"TYPO3\\CMS\\Deploy",syncTYPO3:"TYPO3\\CMS\\Sync"}}).run(c),a.$inject=["$routeProvider"],b.$inject=["toasterConfig"],c.$inject=["editableOptions"]}(),function(){"use strict";function a(a){function b(){a.techs=[{name:"angular",url:"https://angularjs.org/",description:{headline:"AngularJS",span1:"JavaScript",span2:"Framework"}},{name:"flow",url:"http://flow.typo3.org/",description:{headline:"TYPO3 FLOW",span1:"PHP-Application",span2:"Framework"}},{name:"bootstrap",url:"http://getbootstrap.com/",description:{headline:"Bootstrap",span1:"CSS",span2:"Framework"}}],a.subtechs=[{name:"grunt",url:"http://gruntjs.com/",description:{headline:"Grunt"}},{name:"bower",url:"http://bower.io/",description:{headline:"Bower"}},{name:"composer",url:"https://getcomposer.org/",description:{headline:"Composer"}},{name:"karma",url:"http://karma-runner.github.io",description:{headline:"Karma"}},{name:"jasmine",url:"http://jasmine.github.io/",description:{headline:"Jasmine"}},{name:"jquery",url:"http://jquery.com/",description:{headline:"jQuery"}},{name:"css3",url:"http://en.wikipedia.org/wiki/Cascading_Style_Sheets#CSS_3",description:{headline:"CSS 3"}},{name:"git",url:"http://git-scm.com/",description:{headline:"git"}},{name:"html5",url:"http://en.wikipedia.org/wiki/HTML5",description:{headline:"HTML 5"}},{name:"mysql",url:"http://www.mysql.com/",description:{headline:"MySQL"}},{name:"less",url:"http://www.lesscss.de/",description:{headline:"LESS"}}]}a.techs=[],a.subtechs=[],b()}angular.module("surfCaptain").controller("AboutController",a),a.$inject=["$scope"]}(),function(){"use strict";function a(a,b){function c(c){return b.getRootContext(c,a.contexts)}a.getRootContext=c}angular.module("surfCaptain").controller("AbstractApplicationController",a),a.$inject=["$scope","PresetService"]}(),function(){"use strict";function a(a,b,c,d,e){a.name=b.projectName,a.project={},a.messages={},a.error=!1,this.init=function(){c.getProjects().then(function(b){a.project=c.getProjectByName(a.name,b),d.addFavoriteProject(a.project)},function(b){a.finished=!0,e.addErrorFlashMessageFromResponse(b,"Error!","API call failed. Please try again later."),a.error=!0})},this.init()}angular.module("surfCaptain").controller("AbstractSingleProjectController",a),a.$inject=["$scope","$routeParams","ProjectRepository","FavorService","FlashMessageService"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i,j,k,l,m){function n(a){this.name="DeployControllerException",this.message=a}function o(){a.deployableCommits=[{name:E,group:"Tags"},{name:E,group:"Branches"}]}function p(b,c){a.finished=!0,m.addErrorFlashMessageFromResponse(c||{},"Error!",b),a.error=!0}function q(){var b=a.deployableCommits.filter(function(b){return b.identifier===a.selectedCommit});if(angular.isUndefined(b[0])||null===b||b.length>1)throw new n("Something went wrong with the chosen Commit");return b[0]}function r(b){var c;for(c in b)b.hasOwnProperty(c)&&(angular.isUndefined(b[c].applications[0].type)||b[c].applications[0].type===d.applicationTypes.deployTYPO3||b[c].applications[0].type===d.applicationTypes.deploy)&&a.servers.push(b[c]);F.setPreconfiguredServer()}function s(){var b,c=f.search();angular.isDefined(c.server)&&(b=a.servers.filter(function(a){return a.applications[0].nodes[0].name.toLowerCase()===c.server.toLowerCase()}),b.length&&a.setCurrentPreset(b[0]))}function t(b){a.currentPreset=b,F.deploymentPath=a.currentPreset.applications[0].options.deploymentPath,F.context=a.currentPreset.applications[0].options.context,a.globalPreset=k.isPresetGlobal(b),F.setRepositoryOptions(),angular.isDefined(a.selectedCommit)&&""!==a.selectedCommit&&a.setCommitInCurrentPreset()}function u(b,c){var d,e={deploymentPath:b.deploymentPath,context:b.context,title:c};angular.isUndefined(a.currentPreset.applications[0].repositoryOptions)&&(a.currentPreset.applications[0].repositoryOptions={}),angular.isUndefined(a.currentPreset.applications[0].repositoryOptions[a.project.repositoryUrl])&&(a.currentPreset.applications[0].repositoryOptions[a.project.repositoryUrl]=[]),d=a.currentPreset.applications[0].repositoryOptions[a.project.repositoryUrl].filter(function(a){return a.title===c}),d.length?m.addErrorFlashMessage("Error","Title already in use. Please choose another one."):(a.currentPreset.applications[0].repositoryOptions[a.project.repositoryUrl].push(e),F.normalizePresetAndUpdate())}function v(){var b=angular.copy(a.currentPreset);a.finished=!1,b.applications[0].options.deploymentPath=F.deploymentPath,b.applications[0].options.context=F.context,delete b.applications[0].options.tag,delete b.applications[0].options.branch,delete b.applications[0].options.sha1,g.updateServer(b.applications[0]).then(function(){a.finished=!0,m.addSuccessFlashMessage("Success","Repository Options successfully updated."),F.setRepositoryOptions()},function(b){a.finished=!0,m.addErrorFlashMessageFromResponse(b,"Error","The API call failed. Repository Options could not be updated.")})}function w(b,c){for(var d=0;d<c.length;d++)if(angular.isDefined(c[d].name)&&c[d].name===b)return void(a.selectedCommit=c[d].identifier)}function x(){var b,c;if(a.repositoryOptions=[],a.globalPreset&&angular.isDefined(a.currentPreset.applications[0].repositoryOptions)){c=a.currentPreset.applications[0].repositoryOptions;for(b in c)b===a.project.repositoryUrl&&(a.repositoryOptions=c[b])}}function y(b){var c,d=b.title;c=a.currentPreset.applications[0].repositoryOptions[a.project.repositoryUrl].filter(function(a){return a.title!==d}),a.currentPreset.applications[0].repositoryOptions[a.project.repositoryUrl]=c,F.normalizePresetAndUpdate()}function z(b){b===a.currentPreset?(angular.isUndefined(a.currentPreset.applications[0].type)&&(a.currentPreset.applications[0].type=d.applicationTypes.deployTYPO3),angular.isDefined(a.currentPreset.applications[0].options.deploymentPathWithMarkers)&&delete a.currentPreset.applications[0].options.deploymentPathWithMarkers,(angular.isUndefined(a.currentPreset.applications[0].options.repositoryUrl)||""===a.currentPreset.applications[0].options.repositoryUrl)&&(a.currentPreset.applications[0].options.repositoryUrl=a.project.repositoryUrl),j.containsMarker(a.currentPreset.applications[0].options.deploymentPath)&&(a.currentPreset.applications[0].options.deploymentPath=j.replaceMarkers(a.currentPreset.applications[0].options.deploymentPath,{name:a.name})),e.addDeployment(a.currentPreset).then(function(b){c.updateFullProjectInCache(a.project.repositoryUrl),f.path("project/"+a.name+"/deployment/"+b.deployment.__identity)},function(a){F.addFailureFlashMessage("Deployment configuration could not be submitted successfully. Try again later.",a)})):m.addErrorFlashMessage("Oooops","Something went terribly wrong.")}function A(){try{switch(a.currentCommit=F.getCurrentCommit(),a.currentCommit.type){case"Branch":delete a.currentPreset.applications[0].options.tag,a.currentPreset.applications[0].options.branch=a.currentCommit.name;break;case"Tag":delete a.currentPreset.applications[0].options.branch,a.currentPreset.applications[0].options.tag=a.currentCommit.name;break;default:return F.addFailureFlashMessage("Something is wrong with the type of the chosen commit. This should never happen. In fact, If you see this message, please go ahaed and punch any of the involved developers in the face.",{}),void(a.currentCommit=null)}a.currentPreset.applications[0].options.sha1=a.currentCommit.commit.id}catch(b){F.addFailureFlashMessage(b.message,{}),a.currentCommit=null}}function B(b){return angular.isUndefined(a.currentPreset.applications)?"":a.currentPreset===b?"":"disabled"}function C(b){var c;for(c in a.deployableCommits)if(a.deployableCommits.hasOwnProperty(c)&&angular.isDefined(a.deployableCommits[c].name)&&angular.isDefined(a.deployableCommits[c].group)&&a.deployableCommits[c].name===E&&a.deployableCommits[c].group===b){a.deployableCommits.splice(c,1);break}}function D(b){return i.getDeployedTag(b,a.tags)}angular.extend(this,b("AbstractSingleProjectController",{$scope:a})),angular.extend(this,b("AbstractApplicationController",{$scope:a}));var E="loading ...",F=this;n.prototype=new Error,n.prototype.constructor=n,a.deployableCommits=[],a.servers=[],a.error=!1,a.finished=!1,a.currentPreset={},a.tags=[],a.globalPreset=!1,a.showNewRepositoryOption=!1,a.repositoryOptions=[],a.newRepositoryOption={},a.commitUrlSegment="commit",a.setCommitInCurrentPreset=A,a.setCurrentPreset=t,a.deploy=z,a.presetDisplay=B,a.unsetLoadingKeyForGroup=C,a.getDeployedTag=D,a.addRepositoryOption=u,a.removeRepositoryOption=y,this.addFailureFlashMessage=p,this.getCurrentCommit=q,this.setServersFromPresets=r,this.setPreconfiguredServer=s,this.setRepositoryOptions=x,this.normalizePresetAndUpdate=v,this.selectBranchByName=w,this.deploymentPath="",this.context="",o(),a.$watch("project",function(b){angular.isUndefined(b.repositoryUrl)||(c.getFullProjectByRepositoryUrl(b.repositoryUrl).then(function(b){a.repositoryUrl=b.repository.webUrl,l.doesStringContainSubstring(a.repositoryUrl,"bitbucket.org")&&(a.commitUrlSegment="commits"),b.repository.tags.sort(i.byCommitDate),b.repository.branches.sort(i.byCommitDate),F.selectBranchByName("master",b.repository.branches),a.tags=b.repository.tags,a.deployableCommits=b.repository.tags,jQuery.merge(a.deployableCommits,b.repository.branches),F.setServersFromPresets(b.repository.presets),a.finished=!0,0===a.servers.length&&m.addInfoFlashMessage("No Servers yet!",'FYI: There are no servers for project <span class="uppercase">'+a.name+"</span> yet. Why dont you create one, hmm?")},function(a){F.addFailureFlashMessage("API call failed. Deployment not possible.",a)}),g.getGlobalServers("").then(function(b){a.globalServers=b.presets},function(a){F.addFailureFlashMessage("API call failed. Deployment not possible.",a)}),h.getSettings().then(function(b){a.contexts=[],angular.isDefined(b.contexts)&&(a.contexts=b.contexts.split(","))}))})}angular.module("surfCaptain").controller("DeployController",a),a.$inject=["$scope","$controller","ProjectRepository","CONFIG","DeploymentRepository","$location","PresetRepository","SettingsRepository","UtilityService","MarkerService","PresetService","ValidationService","FlashMessageService"]}(),function(){"use strict";function a(a,b,c){function d(){b.getAllDeployments().then(function(b){a.finished=!0,f.setDeployments(b.deployments)},function(b){a.finished=!0,c.addErrorFlashMessageFromResponse(b,"Error!","The API call failed. Please try again later.")})}function e(b){a.deployments=b}var f=this;a.deployments=[],a.finished=!1,this.init=d,this.setDeployments=e,d()}angular.module("surfCaptain").controller("DeploymentsController",a),a.$inject=["$scope","DeploymentRepository","FlashMessageService"]}(),function(){"use strict";function a(){}angular.module("surfCaptain").controller("ExtensionsController",a)}(),function(){"use strict";function a(a,b,c,d,e){function f(){var b;a.serverNames=[];for(b in a.servers)a.servers.hasOwnProperty(b)&&a.serverNames.push(b)}function g(){e.getSettings().then(function(b){a.contexts="",angular.isDefined(b.contexts)&&(a.contexts=b.contexts.split(","))})}function h(){b.getGlobalServers("").then(function(b){a.finished=!0,a.servers=b.presets,k.setServerNames(),0===a.servers.length&&d.addInfoFlashMessage("FYI!","There are no servers yet. Why dont you create one, hmm?")},function(b){a.finished=!0,d.addErrorFlashMessageFromResponse(b,"Request failed!","The global servers could not be received. Please try again later.")})}function i(e){a.finished=!1,b.addServer(e).then(function(){a.newPreset=c.getNewPreset(),a.newServerForm.$setPristine(),a.getAllServers(),d.addSuccessFlashMessage("Server created!","The Server "+e.nodes[0].name+" was successfully created.")},function(b){a.finished=!0,d.addErrorFlashMessageFromResponse(b,"Creation failed!",'The Server "'+e.nodes[0].name+'" could not be created.')})}function j(){k.getSettings(),a.getAllServers()}var k=this;a.newPreset=c.getNewPreset(),a.finished=!1,a.messages=[],a.serverNames=[],a.getAllServers=h,a.addServer=i,this.setServerNames=f,this.getSettings=g,j()}angular.module("surfCaptain").controller("GlobalServerController",a),a.$inject=["$scope","PresetRepository","PresetService","FlashMessageService","SettingsRepository"]}(),function(){"use strict";function a(a,b,c,d,e,f,g){function h(b){return d.getRootContext(b,a.contexts)}function i(b){return f.getDeployedTag(b,a.tags)}function j(b){g.search("server",b),g.path("project/"+a.name+"/deploy")}function k(b){g.search("server",b),g.path("project/"+a.name+"/sync")}angular.extend(this,b("AbstractSingleProjectController",{$scope:a})),a.ordering="date",a.finished=!1,a.tags=[],a.getRootContext=h,a.getDeployedTag=i,a.triggerDeployment=j,a.triggerSync=k,a.$watch("project",function(b){angular.isUndefined(b.repositoryUrl)||e.getSettings().then(function(d){a.contexts=[],angular.isDefined(d.contexts)&&(a.contexts=d.contexts.split(",")),c.getFullProjectByRepositoryUrl(b.repositoryUrl).then(function(b){a.finished=!0,a.deployments=b.repository.deployments,a.presets=b.repository.presets,a.tags=b.repository.tags},function(){a.finished=!0})})})}angular.module("surfCaptain").controller("ProjectController",a),a.$inject=["$scope","$controller","ProjectRepository","PresetService","SettingsRepository","UtilityService","$location"]}(),function(){"use strict";function a(a,b,c,d){function e(){b.getProjects().then(function(b){a.finished=!0,a.projects=b},function(b){a.finished=!0,d.addErrorFlashMessageFromResponse(b,"Error!","API call failed. Your connected Git repository is currently not available.")}),c.getSettings().then(function(b){a.settings=b})}a.settings={},a.ordering="name",a.projects=[],a.finished=!1,this.init=e,e()}angular.module("surfCaptain").controller("ProjectsController",a),a.$inject=["$scope","ProjectRepository","SettingsRepository","FlashMessageService"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i){function j(a){this.name="ServerControllerException",this.message=a}function k(){var b;a.serverNames=[];for(b in a.servers)a.servers.hasOwnProperty(b)&&a.serverNames.push(b)}function l(){var b,c,e=0;if(a.serverNames.length)for(b=a.nameSuggestions.length,e;b>e;e++)c=a.generateServerName(a.nameSuggestions[e].suffix),a.nameSuggestions[e].available=!d.doesArrayContainItem(a.serverNames,c)}function m(b){var c,d;a.nameSuggestions=[];for(c in b)b.hasOwnProperty(c)&&(d={suffix:c,available:!0,context:b[c]},a.nameSuggestions.push(d))}function n(){var b;angular.isUndefined(a.settings)||(a.contexts="",angular.isDefined(a.settings.contexts)&&(a.contexts=a.settings.contexts.split(",")),angular.isDefined(a.settings.nameSuggestions)&&u.generateNameSuggestions(a.settings.nameSuggestions),angular.isDefined(a.settings.defaultDeploymentPath)&&(b=a.settings.defaultDeploymentPath,d.doesStringContainSubstring(b,"{{")&&(b=f.replaceMarkers(b,a.project)),d.doesStringContainSubstring(b,"{{")?(a.newPreset.options.deploymentPath=f.getStringBeforeFirstMarker(b),a.newPreset.options.deploymentPathWithMarkers=b):a.newPreset.options.deploymentPath=b))}function o(b){a.finished=!0,a.servers=b.repository.presets,u.setServerNames(),angular.isDefined(a.nameSuggestions)&&u.setTakenServerNamesAsUnavailableSuggestions(),0===a.servers.length&&h.addInfoFlashMessage("No Servers yet!",'FYI: There are no servers for project <span class="uppercase">'+a.name+"</span> yet. Why dont you create one, hmm?")}function p(b){a.finished=!0,h.addErrorFlashMessageFromResponse(b,"Request failed!","The servers could not be received. Please try again later..")}function q(b){a.newPreset.options.repositoryUrl=a.project.repositoryUrl,b===!1?i.getFullProjectByRepositoryUrlFromServer(a.project.repositoryUrl).then(u.successCallback,u.failureCallback):i.getFullProjectByRepositoryUrl(a.project.repositoryUrl).then(u.successCallback,u.failureCallback)}function r(b){var c;angular.isDefined(a.newPreset.options.deploymentPathWithMarkers)&&(c=f.replaceMarkers(a.newPreset.options.deploymentPathWithMarkers,{suffix:b}),a.newPreset.options.deploymentPath=c)}function s(b){a.finished=!1,angular.isDefined(b.options.deploymentPathWithMarkers)&&delete b.options.deploymentPathWithMarkers,c.addServer(b).then(function(){a.newPreset=g.getNewPreset(a.settings),a.newServerForm.$setPristine(),u.handleSettings(),a.getAllServers(!1),h.addSuccessFlashMessage("Server created!",'The Server "'+b.nodes[0].name+'" was successfully created.')},function(c){a.finished=!0,h.addErrorFlashMessageFromResponse(c,"Creation failed!",'The Server "'+b.nodes[0].name+'" could not be created.')})}function t(b){if(angular.isUndefined(a.project))throw new j("No project given.");if(angular.isUndefined(a.project.identifier))throw new j("Project got no identifier.");return a.project.identifier+"-"+b}var u=this;angular.extend(this,b("AbstractSingleProjectController",{$scope:a})),j.prototype=new Error,j.prototype.constructor=j,a.finished=!1,a.currentPreset={},a.messages=[],a.serverNames=[],a.getAllServers=q,a.setDeploymentPath=r,a.addServer=s,a.generateServerName=t,this.setServerNames=k,this.setTakenServerNamesAsUnavailableSuggestions=l,this.generateNameSuggestions=m,this.handleSettings=n,this.successCallback=o,this.failureCallback=p,a.$watch("project",function(b){angular.isDefined(b.name)&&e.getSettings().then(function(b){a.settings=b,a.newPreset=g.getNewPreset(a.settings),u.handleSettings(),a.getAllServers()},function(){a.newPreset=g.getNewPreset(),a.getAllServers()})})}angular.module("surfCaptain").controller("ServerController",a),a.$inject=["$scope","$controller","PresetRepository","ValidationService","SettingsRepository","MarkerService","PresetService","FlashMessageService","ProjectRepository"]}(),function(){"use strict";function a(a,b,c){function d(){b.getSettings().then(function(b){a.settings=b},function(a){c.addErrorFlashMessageFromResponse(a,"Error!","Something went wrong.")})}d()}angular.module("surfCaptain").controller("SettingsController",a),a.$inject=["$scope","SettingsRepository","FlashMessageService"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i){function j(){if(!a.noLog)switch(a.deployment.status){case"success":r&&!q&&(f.addSuccessFlashMessage("Deployment Successfull!",a.deployment.referenceName+" was successfully deployed onto "+a.deployment.options.name+"!"),q=!0),p.storeDeploymentInCacheFactory();break;case"failed":r&&!q&&(f.addErrorFlashMessage("Deployment Failed!",a.deployment.referenceName+"could not be deployed onto "+a.deployment.options.name+"! Check the log for what went wrong."),q=!0),p.storeDeploymentInCacheFactory();break;case"cancelled":return void p.storeDeploymentInCacheFactory();case"waiting":q||(f.addInfoFlashMessage("Deployment will start shortly!",a.deployment.referenceName+" will be shortly deployed onto "+a.deployment.options.name+"! You can cancel the deployment while it is still waiting."),q=!0),setTimeout(p.getDeployment,1e3);break;case"running":q=!1,r=!0,setTimeout(p.getDeployment,1e3);break;default:return}}function k(){angular.isUndefined(d.get("deploymentCache"))&&d("deploymentCache"),d.get("deploymentCache").put(a.deployment.__identity,a.deployment),g.updateFullProjectInCache(a.deployment.repositoryUrl)}function l(){b.getSingleDeployment(c.deploymentId).then(function(b){a.finished=!0,a.deployment=b.deployment,i.doesStringContainSubstring(b.deployment.repositoryUrl,"bitbucket.org")&&(a.commitUrlSegment="commits"),p.initLiveLog()},function(){a.finished=!0,a.noLog=!0})}function m(){p.getDeployment()}function n(){b.cancelDeployment(c.deploymentId).then(function(){p.getDeployment()})}function o(){b.addDeployment(a.deployment.configuration).then(function(b){e.path("project/"+a.name+"/deployment/"+b.deployment.__identity)},function(a){f.addErrorFlashMessageFromResponse(a,"Error!","Deployment configuration could not be submitted successfully. Try again later.")})}var p=this,q=!1,r=!1;angular.extend(this,h("AbstractSingleProjectController",{$scope:a})),a.finished=!1,a.noLog=!1,a.commitUrlSegment="commit",a.cancelDeployment=n,a.deployConfigurationAgain=o,this.initLiveLog=j,this.storeDeploymentInCacheFactory=k,this.getDeployment=l,this.init=m,m()}angular.module("surfCaptain").controller("SingleDeploymentController",a),a.$inject=["$scope","DeploymentRepository","$routeParams","$cacheFactory","$location","FlashMessageService","ProjectRepository","$controller","ValidationService"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i){function j(){f.getSettings().then(function(b){a.contexts=[],angular.isDefined(b.contexts)&&(a.contexts=b.contexts.split(","))})}function k(){c.getGlobalServers("").then(function(b){a.globalServers=b.presets},function(a){i.addErrorFlashMessageFromResponse(a,"Request Error","Could not receive Global Servers.")})}function l(b){var c;for(c in b)b.hasOwnProperty(c)&&(angular.isUndefined(b[c].applications[0].type)||b[c].applications[0].type===d.applicationTypes.syncTYPO3)&&a.servers.push(b[c]);s.setPreconfiguredServer()}function m(){var b,c=h.search();angular.isDefined(c.server)&&(b=a.servers.filter(function(a){return a.applications[0].nodes[0].name.toLowerCase()===c.server.toLowerCase()}),b.length&&a.setCurrentSource(b[0]))}function n(b){return angular.isUndefined(a.currentSource.applications)?"":a.currentSource===b?"":"disabled"}function o(b){return angular.isUndefined(a.currentTarget.applications)?"":a.currentTarget===b?"":"disabled"}function p(b){a.currentSource=b}function q(b){a.currentTarget=b}function r(b,c){var f={syncDeployment:{deploymentType:d.applicationTypes.syncTYPO3,sourcePresetKey:b.applications[0].nodes[0].name,presetKey:c.applications[0].nodes[0].name}};g.create(f).then(function(d){i.addSuccessFlashMessage("OK!",c.applications[0].nodes[0].name+" will be synchronized with "+b.applications[0].nodes[0].name+"."),e.updateFullProjectInCache(a.project.repositoryUrl),h.path("project/"+a.name+"/deployment/"+d.deployment.__identity)},function(a){i.addErrorFlashMessageFromResponse(a,"Request Error","API call failed. Sync not possible.")})}angular.extend(this,b("AbstractSingleProjectController",{$scope:a})),angular.extend(this,b("AbstractApplicationController",{$scope:a}));var s=this;a.servers=[],a.finished=!1,a.currentSource={},a.currentTarget={},a.sync=r,a.setCurrentTarget=q,a.setCurrentSource=p,a.targetDisplay=o,a.sourceDisplay=n,this.setContexts=j,this.setGlobalServers=k,this.setServersFromPresets=l,this.setPreconfiguredServer=m,this.init=function(){s.setContexts(),s.setGlobalServers()},this.init(),a.$watch("project",function(b){angular.isUndefined(b.repositoryUrl)||e.getFullProjectByRepositoryUrl(b.repositoryUrl).then(function(b){s.setServersFromPresets(b.repository.presets),a.finished=!0,0===a.servers.length&&i.addInfoFlashMessage("No Servers yet!",'FYI: There are no servers for project <span class="uppercase">'+a.name+"</span> yet. Why dont you create one, hmm?")},function(a){i.addErrorFlashMessageFromResponse(a,"Request Error","API call failed. Sync not possible.")})})}angular.module("surfCaptain").controller("SyncController",a),a.$inject=["$scope","$controller","PresetRepository","CONFIG","ProjectRepository","SettingsRepository","SyncDeploymentRepository","$location","FlashMessageService"]}(),function(){"use strict";function a(a){function b(b,c){b.$watchCollection("chosen",function(b,d){angular.isArray(b)&&b!==d&&a(function(){c.trigger("liszt:updated"),c.trigger("chosen:updated")},1e3)}),c.chosen({search_contains:!0})}return{restrict:"A",link:b,scope:{chosen:"="}}}angular.module("surfCaptain").directive("chosen",a),a.$inject=["$timeout"]}(),function(){"use strict";function a(a){return{restrict:"A",require:"ngModel",scope:{character:"@character"},link:function(b,c,d,e){var f=b.character||"";e.$parsers.unshift(function(b){var c=b?a.doesLastCharacterMatch(b.slice(-1),f):!1;return e.$setValidity("last-character-validate",c),c?b:void 0}),e.$formatters.unshift(function(b){var c=b?a.doesLastCharacterMatch(b.slice(-1),f):!1;return e.$setValidity("last-character-validate",c),b})}}}angular.module("surfCaptain").directive("lastCharacterValidate",a),a.$inject=["ValidationService"]}(),function(){"use strict";function a(){return{scope:{modal:"@modal"},link:function(a,b){b.bind("click",function(){angular.element("."+a.modal).modal()})}}}angular.module("surfCaptain").directive("modal",a)}(),function(){"use strict";function a(){return{restrict:"E",template:"<div data-ng-class=\"{false:'overlay'}[finished]\"></div>",scope:{finished:"="}}}angular.module("surfCaptain").directive("overlay",a)}(),function(){"use strict";function a(a,b,c,d,e){var f=function(f){f.toggleSpinnerAndOverlay=function(){f.finished=!f.finished,f.$parent.finished=!f.$parent.finished},d.getSettings().then(function(a){f.contexts="",angular.isDefined(a.contexts)&&(f.contexts=a.contexts.split(","))}),f.getRootContext=function(a){var c=0,d=f.contexts.length;for(c;d>c;c++)if(b.doesStringStartWithSubstring(a,f.contexts[c]))return f.contexts[c];return""},f.setCurrentPreset=function(a){f.currentPreset=a},f.deleteServer=function(b){f.toggleSpinnerAndOverlay(),a.deleteServer(b).then(function(){f.$parent.getAllServers(!1),c.addSuccessFlashMessage("Server deleted!",'The Server "'+b.applications[0].nodes[0].name+'" was successfully removed.')},function(a){f.toggleSpinnerAndOverlay(),c.addErrorFlashMessageFromResponse(a,"Deletion failed!",'The Server "'+b.applications[0].nodes[0].name+'" could not be removed.')})},f.updateServer=function(b){f.toggleSpinnerAndOverlay(),a.updateServer(b.applications[0]).then(function(){b.changed=!1,f.toggleSpinnerAndOverlay(),angular.isDefined(f.$parent.project)&&e.updateFullProjectInCache(f.$parent.project.repositoryUrl),c.addSuccessFlashMessage("Update successful!",'The Server "'+b.applications[0].nodes[0].name+'" was updated successfully.')},function(a){f.toggleSpinnerAndOverlay(),c.addErrorFlashMessageFromResponse(a,"Update failed!",'The Server "'+b.applications[0].nodes[0].name+'" could not be updated.')})},f.updateHost=function(a){return b.hasLength(a,1,"Host must not be empty!")},f.updateDeploymentPath=function(a){var c=b.hasLength(a,1,"DeploymentPath is required!");return c===!0?b.doesLastCharacterMatch(a,"/",'DeploymentPath must end with "/"!'):c},f.updateUsername=function(a){return b.hasLength(a,1,"User must not be empty!")},f.updateContext=function(a){var c=0,d=f.contexts.length;for(c;d>c;c++)if(b.doesStringStartWithSubstring(a,f.contexts[c]))return!0;return"Context must start with either Development, Testing or Production!"}};return{restrict:"E",templateUrl:"/_Resources/Static/Packages/Lightwerk.SurfCaptain/Scripts/SurfCaptainApp/Partials/ServerList.html",scope:{servers:"=",getAllServers:"&",finished:"=",messages:"=",project:"="},link:f}}angular.module("surfCaptain").directive("serverList",a),a.$inject=["PresetRepository","ValidationService","FlashMessageService","SettingsRepository","ProjectRepository"]}(),function(){"use strict";function a(){return{restrict:"A",require:"ngModel",scope:{serverNames:"="},link:function(a,b,c,d){d.$parsers.unshift(function(b){var c=void 0===a.serverNames||-1===a.serverNames.indexOf(b);return d.$setValidity("server-name-validate",c),c?b:void 0}),d.$formatters.unshift(function(b){var c=void 0===a.serverNames||-1===a.serverNames.indexOf(b);return d.$setValidity("server-name-validate",c),b})}}}angular.module("surfCaptain").directive("serverNameValidate",a)}(),function(){"use strict";function a(){return{restrict:"E",template:'<i class="fa fa-spinner fa-spin fa-4x"></i>'}}angular.module("surfCaptain").directive("spinner",a)}(),function(){"use strict";function a(a){return{restrict:"A",require:"ngModel",scope:{startWithValidate:"="},link:function(b,c,d,e){e.$parsers.unshift(function(c){var d,f=0;if(angular.isUndefined(b.startWithValidate))return e.$setValidity("start-with-validate",!0),c;for(d=b.startWithValidate.length,f;d>f;f++)if(a.doesStringStartWithSubstring(c,b.startWithValidate[f]))return e.$setValidity("start-with-validate",!0),c;return void e.$setValidity("start-with-validate",!1)}),e.$formatters.unshift(function(c){var d,f=0;if(angular.isUndefined(b.startWithValidate))return e.$setValidity("start-with-validate",!0),c;for(d=b.startWithValidate.length,f;d>f;f++)if(a.doesStringStartWithSubstring(c,b.startWithValidate[f]))return e.$setValidity("start-with-validate",!0),c;return e.$setValidity("start-with-validate",!1),c})}}}angular.module("surfCaptain").directive("startWithValidate",a),a.$inject=["ValidationService"]}(),function(){"use strict";function a(a,b,c){function d(d){var e=b.path().split("/").pop();d.project=a.itemName,d.context=e===d.project?"":e,d.favorites=c.getFavoriteProjects()}return{restrict:"E",templateUrl:"/_Resources/Static/Packages/Lightwerk.SurfCaptain/Scripts/SurfCaptainApp/Partials/Header.html",scope:{icon:"@"},link:d,replace:!0}}angular.module("surfCaptain").directive("surfcaptainHeader",a),a.$inject=["$routeParams","$location","FavorService"]}(),function(){"use strict";function a(a,b){function c(c){var d=b.path().split("/").pop();c.project=a.projectName,c.context=d===c.project?"history":d}return{restrict:"E",templateUrl:"/_Resources/Static/Packages/Lightwerk.SurfCaptain/Scripts/SurfCaptainApp/Partials/Menu.html",scope:{},link:c,replace:!0}}angular.module("surfCaptain").directive("surfcaptainMenu",a),a.$inject=["$routeParams","$location"]}(),function(){"use strict";function a(){return function(a,b){b.bind("click",function(a){a.preventDefault(),angular.element(this).tab("show")})}}angular.module("surfCaptain").directive("tab",a)}(),function(){"use strict";function a(){return function(a,b){b.tooltip()}}angular.module("surfCaptain").directive("tooltip",a)}(),function(){"use strict";function a(a){return function(b,c){c.text(a)}}angular.module("surfCaptain").directive("appVersion",a),a.$inject=["version"]}(),function(){"use strict";function a(){return function(a){switch(a){case"TYPO3CMSDeploy":case"TYPO3\\CMS\\Deploy":return"TYPO3 Deployment";case"TYPO3CMSSync":case"TYPO3\\CMS\\Sync":return"TYPO3 Sync";case"TYPO3FlowDeploy":case"TYPO3\\Flow\\Deploy":return"Flow Deployment";case"TYPO3FlowSync":case"TYPO3\\Flow\\Sync":return"Flow Sync";case"Deploy":return"Simple Deployment";default:return a}}}angular.module("surfCaptain").filter("DeploymentTypeFilter",a)}(),function(){"use strict";function a(){return function(a){switch(a){case 3:case"3":return"error";case 4:case"4":return"warning";case 5:case"5":return"notice";case 6:case"6":return"info";case 7:case"7":return"debug";default:return a}}}angular.module("surfCaptain").filter("logCodeFilter",a)}(),function(){"use strict";function a(a,b,c,d){
function e(a){return d.postRequest({deployment:{configuration:a}},j)}function f(){var c=b.defer();return a.get(j).success(c.resolve).error(c.reject),c.promise}function g(d){var e=b.defer();return angular.isDefined(c.get("deploymentCache").get(d))?(e.resolve({deployment:c.get("deploymentCache").get(d)}),e.promise):(a.get(j+"?deployment="+d).success(e.resolve).error(e.reject),e.promise)}function h(a){return d.putRequest({deployment:{__identity:a,status:"cancelled"}},j)}var i={addDeployment:e,getDeployments:f,getSingleDeployment:g,cancelDeployment:h},j="/api/deployment";return c("deploymentCache"),{addDeployment:function(a){return i.addDeployment(a)},cancelDeployment:function(a){return i.cancelDeployment(a)},getAllDeployments:function(){return i.getDeployments()},getSingleDeployment:function(a){return i.getSingleDeployment(a)}}}angular.module("surfCaptain").factory("DeploymentRepository",a),a.$inject=["$http","$q","$cacheFactory","RequestService"]}(),function(){"use strict";function a(a,b,c){function d(a){this.name="PresetRepositoryException",this.message=a}var e={},f="/api/preset";return d.prototype=new Error,d.prototype.constructor=d,e.getFullPresetAsString=function(a){return angular.toJson(e.getFullPreset(a),!1)},e.getFullPreset=function(a){var b={applications:[]};return b.applications[0]=a,b},e.getKeyFromServerConfiguration=function(a){if(angular.isUndefined(a.nodes[0].name)){if(angular.isUndefined(a.applications[0].nodes[0].name))throw new d("PresetRepository.getKeyFromServerConfiguration failed. Server configuration contains no key.");return a.apllications[0].nodes[0].name}return a.nodes[0].name},e.getApplicationContainer=function(a){var b={applications:[]};return b.applications[0]=a,b},e.getGlobalServers=function(){var c=b.defer();return a.get(f+"?globals=1").success(c.resolve).error(c.reject),c.promise},e.putServer=function(a){var b={key:this.getKeyFromServerConfiguration(a),configuration:e.getFullPreset(a)};return c.putRequest(b,f)},e.postServer=function(a){var b={key:this.getKeyFromServerConfiguration(a),configuration:e.getFullPreset(a)};return c.postRequest(b,f)},e.deleteServer=function(c){var d=b.defer();return a["delete"](f+"?key="+e.getKeyFromServerConfiguration(c.applications[0])).success(d.resolve).error(d.reject),d.promise},{getGlobalServers:function(){return e.getGlobalServers()},updateServer:function(a){return e.putServer(a)},addServer:function(a){return e.postServer(a)},deleteServer:function(a){return e.deleteServer(a)}}}angular.module("surfCaptain").factory("PresetRepository",a),a.$inject=["$http","$q","RequestService"]}(),function(){"use strict";function a(a,b,c){function d(a){this.name="ProjectRepositoryException",this.message=a}var e={},f="/api/repository",g=c("projectCache"),h=c("projectsCache"),i=c("repositoryCache");return d.prototype=new Error,d.prototype.constructor=d,e.populateSingleProjectCache=function(a){var b=angular.isDefined(a)?a.length:0,c=0;if(b)for(c;b>c;c++)g.put(a[c].identifier,a[c])},e.getProjects=function(){var c=b.defer();return angular.isDefined(h.get("allProjects"))?(c.resolve(h.get("allProjects")),c.promise):(a.get(f,{cache:!0,headers:{Accept:"application/json"}}).success(function(a){c.resolve(a.repositories),h.put("allProjects",a.repositories),e.populateSingleProjectCache(a.repositories)}).error(c.reject),c.promise)},e.getProjectByName=function(a,b){if(angular.isUndefined(g.get(a))&&e.populateSingleProjectCache(b),g=c.get("projectCache"),angular.isUndefined(g.get(a)))throw new d("Could not find project");return g.get(a)},e.getFullProjectByRepositoryUrl=function(c){var d=b.defer();return angular.isDefined(i.get(c))?(d.resolve(i.get(c)),e.updateFullProjectInCache(c)):a.get(f+"?repositoryUrl="+c).success(function(a){i.put(c,a),d.resolve(a)}).error(d.reject),d.promise},e.getFullProjectByRepositoryUrlFromServer=function(c){var d=b.defer();return a.get(f+"?repositoryUrl="+c).success(function(a){i.put(c,a),d.resolve(a)}).error(d.reject),d.promise},e.updateFullProjectInCache=function(b){a.get(f+"?repositoryUrl="+b).success(function(a){i.put(b,a)})},{getProjects:function(){return e.getProjects()},getProjectByName:function(a,b){return e.getProjectByName(a,b)},getFullProjectByRepositoryUrl:function(a){return e.getFullProjectByRepositoryUrl(a)},updateFullProjectInCache:function(a){e.updateFullProjectInCache(a)},getFullProjectByRepositoryUrlFromServer:function(a){return e.getFullProjectByRepositoryUrlFromServer(a)}}}angular.module("surfCaptain").factory("ProjectRepository",a),a.$inject=["$http","$q","$cacheFactory"]}(),function(){"use strict";function a(a,b,c){var d={},e="/api/frontendSetting";return c("settingsCache"),d.getFrontendSettings=function(){var d=b.defer(),f=c.get("settingsCache");return angular.isDefined(f.get("configuration"))?(d.resolve(f.get("configuration")),d.promise):(a.get(e,{cache:!0}).success(function(a){f.put("configuration",a.frontendSettings),d.resolve(a.frontendSettings)}).error(d.reject),d.promise)},{getSettings:function(){return d.getFrontendSettings()}}}angular.module("surfCaptain").factory("SettingsRepository",a),a.$inject=["$http","$q","$cacheFactory"]}(),function(){"use strict";function a(a){function b(b){return a.postRequest(b,d)}var c={create:b},d="/api/syncDeployment";return{create:function(a){return c.create(a)}}}angular.module("surfCaptain").factory("SyncDeploymentRepository",a),a.$inject=["RequestService"]}(),function(){"use strict";function a(a,b){var c,d=this;this.addFavoriteProject=function(b){var c=d.getFavoriteProjects(),e=c.length,f=0;if(e){for(f;e>f;f++)if(c[f].identifier===b.identifier)return;e>2&&(c=c.slice(1,3))}c.push(b),a.put("favoriteProjects",angular.toJson(c),{end:1/0})},this.getFavoriteProjects=function(){var b=[];return angular.isDefined(a.get("favoriteProjects"))&&null!==a.get("favoriteProjects")&&(b=angular.fromJson(a.get("favoriteProjects"))),b},(c=function(){var a=d.getFavoriteProjects(),c=a.length,e=0;for(b.getProjects(),e;c>e;e++)angular.isDefined(a[e].repositoryUrl)&&b.updateFullProjectInCache(a[e].repositoryUrl)})()}angular.module("surfCaptain").service("FavorService",a),a.$inject=["cookieStore","ProjectRepository"]}(),function(){"use strict";function a(a){var b=this;this.addErrorFlashMessageFromResponse=function(a,c,d){var e=d;angular.isDefined(a.flashMessages)&&angular.isArray(a.flashMessages)&&(e="",angular.forEach(a.flashMessages,function(a){e+=a.message+" "})),b.addErrorFlashMessage(c,e)},this.addErrorFlashMessage=function(a,c){b.addFlashMessage("error",a,c)},this.addSuccessFlashMessage=function(a,c){b.addFlashMessage("success",a,c)},this.addInfoFlashMessage=function(a,c){b.addFlashMessage("note",a,c)},this.addFlashMessage=function(b,c,d){a.pop(b,c,d)}}angular.module("surfCaptain").service("FlashMessageService",a),a.$inject=["toaster"]}(),function(){"use strict";function a(){var a=[],b=function(){a=[]},c=function(b,c){a.push([b,c])},d=function(c){var d,e,f=a.length,g=f-1;if(f)for(g;g>=0;g--)d=a[g][0],e=a[g][1],c=c.slice(0,d)+e+c.slice(d);return b(),c};this.getFirstMarker=function(a){var b;return"string"!=typeof a?null:(b=a.match(new RegExp("([{]{2,2})([A-Za-z0-9]*)([}]{2,2})")),null===b?null:b[0])},this.replaceMarkers=function(a,b){var e,f;if(angular.isUndefined(b))return a;switch(e=this.getFirstMarker(a)){case null:return a=d(a);case"{{project}}":case"{{projectName}}":case"{{projectname}}":angular.isDefined(b.name)?f=b.name:(c(a.indexOf(e),e),f="");break;case"{{suffix}}":angular.isDefined(b.suffix)?f=b.suffix:(c(a.indexOf(e),e),f="");break;default:c(a.indexOf(e),e),f=""}return a=a.replace(e,f),a=this.replaceMarkers(a,b)},this.getStringBeforeFirstMarker=function(a){var b;return"string"!=typeof a?"":(b=a.indexOf(this.getFirstMarker(a)),-1===b?a:a.substring(0,b))},this.containsMarker=function(a){return null!==this.getFirstMarker(a)}}angular.module("surfCaptain").service("MarkerService",a)}(),function(){"use strict";function a(a,b){var c={options:{repositoryUrl:"",deploymentPath:"",context:""},nodes:[{name:"",hostname:"",username:""}]},d=this;this.contexts=[],this.setContexts=function(){0===d.contexts.length&&a.getSettings().then(function(a){d.contexts=[],angular.isDefined(a.contexts)&&(d.contexts=a.contexts.split(","))})},this.getNewPreset=function(a){var b=angular.copy(c);return angular.isDefined(a)&&(angular.isDefined(a.defaultUser)&&(b.nodes[0].username=a.defaultUser),angular.isDefined(a.defaultDeploymentPath)&&(b.options.deploymentPath=a.defaultDeploymentPath)),b},this.getRootContext=function(a,c){this.setContexts();var d=0,e=c.length;for(d;e>d;d++)if(b.doesStringStartWithSubstring(a,c[d]))return c[d];return"unknown-context"},this.isPresetGlobal=function(a){return angular.isUndefined(a.applications)||!angular.isArray(a.applications)?!1:0===a.applications.length?!1:angular.isUndefined(a.applications[0].options)?!1:angular.isUndefined(a.applications[0].options.repositoryUrl)||""===a.applications[0].options.repositoryUrl}}angular.module("surfCaptain").service("PresetService",a),a.$inject=["SettingsRepository","ValidationService"]}(),function(){"use strict";function a(a,b){function c(a,b){return g.request(g.getRequestObject("POST",a,b))}function d(a,b){return g.request(g.getRequestObject("PUT",a,b))}function e(c){var d=b.defer();return a(c).success(d.resolve).error(d.reject),d.promise}function f(a,b,c){return{method:a,url:c,data:b,headers:{"Content-Type":"application/json",Accept:"application/json"}}}var g=this;this.postRequest=c,this.putRequest=d,this.request=e,this.getRequestObject=f}angular.module("surfCaptain").service("RequestService",a),a.$inject=["$http","$q"]}(),function(){"use strict";function a(a){this.getDeployedTag=function(b,c){var d,e=c.length,f=0;for(f;e>f;f++)if(c[f].name==="server-"+b){d=c[f].commit;break}if(angular.isUndefined(d))return"No deployed commit found.";for(f=0;e>f;f++)if(c[f].commit.id===d.id&&c[f].name!=="server-"+b)return c[f].type+" "+c[f].name+" - "+d.committerName+': "'+d.message+'"';return"sha1: "+a("limitTo")(d.id,8)+" - "+d.committerName+': "'+d.message+'"'},this.byCommitDate=function(a,b){return angular.isUndefined(a.commit)||angular.isUndefined(b.commit)||angular.isUndefined(a.commit.date)||angular.isUndefined(b.commit.date)?-1:a.commit.date<b.commit.date?1:-1}}angular.module("surfCaptain").service("UtilityService",a),a.$inject=["$filter"]}(),function(){"use strict";function a(){this.hasLength=function(a,b,c){return a.length>=b?!0:c||!1},this.doesLastCharacterMatch=function(a,b,c){return a.charAt(a.length-1)===b?!0:c||!1},this.doesArrayContainItem=function(a,b,c){return a instanceof Array&&a.indexOf(b)>-1?!0:c||!1},this.doesStringContainSubstring=function(a,b,c){return"string"==typeof a&&-1!==a.indexOf(b)?!0:c||!1},this.doesStringStartWithSubstring=function(a,b,c){return"string"==typeof a&&0===a.indexOf(b)?!0:c||!1}}angular.module("surfCaptain").service("ValidationService",a)}();